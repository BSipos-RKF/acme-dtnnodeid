<?xml version="1.0"?>
<?rfc toc="yes"?>
<rfc ipr="trust200902" category="exp" docName="draft-sipos-acme-dtnnodeid-01">
  <front>
    <title abbrev="ACME DTN Node ID">
Automated Certificate Management Environment (ACME)
Delay-Tolerant Networking (DTN) Node ID Validation Extension
    </title>
    <author initials="B." surname="Sipos" fullname="Brian Sipos">
      <organization abbrev="RKF Engineering">RKF Engineering Solutions, LLC</organization>
      <address>
        <postal>
          <street>7500 Old Georgetown Road</street>
          <street>Suite 1275</street>
          <city>Bethesda</city>
          <region>MD</region>
          <code>20814-6198</code>
          <country>United States of America</country>
        </postal>
        <email>BSipos@rkf-eng.com</email>
      </address>
    </author>
    <date year="2020" month="June" day="26" />
    <area>Transport</area>
    <workgroup>Delay-Tolerant Networking</workgroup>
    <abstract>
      <t>
This document specifies an extension to the Automated Certificate Management Environment (ACME) protocol which allows validating the Delay-Tolerant Networking (DTN) Node ID for an ACME client.
The use of a Uniform Resource Identifier (URI) as ACME identifier is also specified.
      </t>
    </abstract>
  </front>
  <middle>
    <section anchor="sec-intro" title="Introduction">
      <t>
Although the original purpose of the Automatic Certificate Management Environment (ACME) <xref target="RFC8555" /> was to allow PKI certificate authorities to validate network domain names of clients, the same mechanism can be used to validate any of the subject claims supported by the PKIX profile <xref target="RFC5280" />.
In the case of this specification, the claim being validated is a Subject Alternative Name (SAN) of type Uniform Resource Identifier (URI) used to represent the Node ID of a Delay-Tolerant Networking (DTN) Node.
      </t>
      <t>
The basic unit of data exchange in a DTN is a Bundle <xref target="I-D.ietf-dtn-bpbis" />, which consists of a data payload with accompanying metadata.
A DTN Node ID is a URI with a specific set of allowed schemes <xref target="I-D.ietf-dtn-bpbis" /> which determines how bundles are routed within a DTN.
A Node ID is used to identify the source and destination of a Bundle and is used for routing through intermediate nodes.
More detailed descriptions of the rationale and capabilities of these networks can be found in &quot;Delay-Tolerant Network Architecture&quot; <xref target="RFC4838" />.
      </t>
      <t>
When a certificate request contains a SAN URI which could be used as a DTN Node ID, the ACME server offers a challenge type to validate that Node ID.
In order to validate a Node ID, the ACME server sends an ACME Node ID Validation Challenge Bundle with a destination of the Node ID being validated.
The BP agent on that node receives the Challenge Bundle, generates an ACME signature, and sends an ACME Node ID Validation Response Bundle with the signature.
Finally, the ACME server receives the Response Bundle and checks that the signature came from the client account key associated with the original request.
      </t>
      <t>
Because the DTN Node ID is used both for routing bundles between BP agents and for multiplexing services within a BP agent, there is no possibility to separate the ACME validation of a Node ID from normal bundle handling on that same Node ID.
This leaves Bundle administrative records as a way to leave the Node ID unchanged while disambiguating from normal service data bundles.
      </t>
      <t>
The scope and behavior of this validation mechanism is similar to that of secured email validation of <xref target="I-D.ietf-acme-email-smime" />.
For that reason some token splitting terminology in this document is taken from the email specification.
      </t>
    </section>
    <section anchor="sec-terminology" title="Terminology">
      <t>
The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;NOT RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be interpreted as described in BCP 14 <xref target="RFC2119" /> <xref target="RFC8174" /> when, and only when, they appear in all capitals, as shown here.
      </t>
      <t>
In this document, several terms are shortened for the sake of terseness.
These terms are:
        <list style="hanging">
            <t hangText="Challenge Request:">
This is a shortened form of the full "DTN Node ID Challenge Request Object".
It is a JSON object created by the ACME server for challenge type "dtn-nodeid-01".
            </t>
            <t hangText="Challenge Response:">
This is a shortened form of the full "DTN Node ID Challenge Response Object".
It is a JSON object created by the ACME client to authorize a challenge type "dtn-nodeid-01".
            </t>
            <t hangText="Challenge Bundle:">
This is a shortened form of the full "ACME Node ID Validation Challenge Bundle".
It is a Bundle created by the ACME server to challenge a Node ID claim.
            </t>
            <t hangText="Response Bundle:">
This is a shortened form of the full "ACME Node ID Validation Response Bundle".
It is a Bundle created by the BP agent managed by the ACME client to validate a Node ID claim.
            </t>
        </list>
      </t>
    </section>
    <section anchor="sec-acme-uri" title="URI Identifier">
      <t>
This specification is the first to make use of a URI to identify a service for a certificate request in ACME.
The URI-type identifier is general purpose, and validating ownership of a URI requires a specific purpose related to its "scheme" component.
In this document, the only purpose for which a URI identifier is validated is as a DTN Node ID (see <xref target="sec-validate-nodeid" />), but other specifications can define challenge types for other URI uses.
      </t>
      <t>
Identifiers of type "uri" MUST appear in an extensionRequest attribute <xref target="RFC2985" /> requesting a subjectAltName extension of type uniformResourceIdentifier having a value consistent with the requirements of <xref target="RFC3986" />.
      </t>
      <t>
If an ACME server wishes to request proof that a user controls a URI, it SHALL create an authorization with the identifier type "uri".
The value field of the identifier SHALL contain the textual form of the URI as defined in Section 3 of <xref target="RFC3986" />.
The ACME server SHALL NOT decode or attempt to dereference the URI value on its own.
It is the responsibility of a validation method to ensure the URI ownership via scheme-specific means authorized by the ACME client.
      </t>
      <figure>
        <preamble>
An identifier for the URL "dtn://example/service" would be formatted as:
        </preamble>
        <artwork type="json">
{"type": "uri", "value": "dtn://example/service"}
</artwork>
      </figure>
    </section>
    <section anchor="sec-validate-nodeid" title="DTN Node ID Validation">
      <t>
The DTN Node ID validation method proves control over a Node ID by requiring the ACME client to configure a BP agent to respond to specific Challenge Bundles sent from the ACME server.
The ACME server validates control of the Node ID URI by verifying that received Response Bundles correspond with the BP Node and client account key being validated.
      </t>
      <t>
Similar to the ACME use case for validating email address ownership <xref target="I-D.ietf-acme-email-smime" />, this challenge splits the token into two parts.
Each part reaches the client through a different channel: one via the ACME channel in the challenge object, the other via the DTN channel within the Challenge Bundle.
The Key Authorization result requires that the ACME client have access to the results of each channel to get both parts of the token.
      </t>
      <t>
The DTN Node ID Challenge SHALL only be allowed for URIs usable as a DTN Node ID, which are currently the schemes "dtn" and "ipn" as defined in <xref target="I-D.ietf-dtn-bpbis" />.
When an ACME server supports Node ID validation, the ACME server SHALL define a challenge object in accordance with <xref target="sec-nodeid-challenge-request" />.
Once this challenge object is defined, the ACME client may begin the validation.
      </t>
      <t>
To initiate a Node ID validation, the ACME client performs the following steps:
        <list style="numbers">
          <t>
The ACME client obtains the challenge &lt;token-part2&gt; from the challenge object in accordance with <xref target="sec-nodeid-challenge-request" />.
          </t>
          <t>
The ACME client indicates to the BP agent the challenge &lt;token-part2&gt; which is authorized for use.
          </t>
          <t>
The ACME client POSTs a challenge response to the challenge URL on the ACME server accordance with Section 7.5.1 of <xref target="RFC8555" />.
The payload object is constructed in accordance with <xref target="sec-nodeid-challenge-response" />.
          </t>
          <t>
The ACME client waits for indication from the BP agent that a Challenge Bundle has been received, including its &lt;token-part1&gt; payload.
          </t>
          <t>
The ACME client concatenates &lt;token-part1&gt; with &lt;token-part2&gt; and computes the Key Authorization in accordance with Section 8.1 of <xref target="RFC8555" /> using the full token and client account key.
          </t>
          <t>
The ACME client indicates to the BP agent the Key Authorization result, which will result in a Response Bundle being sent back to the ACME server.
          </t>
          <t>
The ACME client waits for the authorization to be finalized on the ACME server in accordance with Section 7.5.1 of <xref target="RFC8555" />.
          </t>
          <t>
Once the challenge is completed (successfully or not), the ACME client indicates to the BP agent that the validation &lt;token-part1&gt; is no longer usable.
          </t>
        </list>
      </t>
      <t>
Upon receiving a challenge response from an ACME client, the ACME server verifies the client's control over the Node ID by performing the following steps:
        <list style="numbers">
          <t>
The ACME server generates the two-part challenge token and computes the expected Key Authorization in accordance with Section 8.1 of <xref target="RFC8555" /> using the concatenated token and client account key.
          </t>
          <t>
The ACME server sends one or more Challenge Bundles in accordance with <xref target="sec-bundle-challenge" />.
          </t>
          <t>
The ACME server waits for Response Bundle(s) for a limited interval of time.
A default response interval, used when the challenge does not contain an RTT, SHOULD be a configurable parameter of the ACME server.
If the ACME client indicated an RTT value in the challenge object, the response interval SHOULD be twice the RTT (with limiting logic applied as described below).
The lower limit on response waiting time is network-specific, but SHOULD be no shorter than one second.
The upper limit on response waiting time is network-specific, but SHOULD be no longer than one minute (60 seconds) for a terrestrial-only DTN.
Responses are encoded in accordance with <xref target="sec-bundle-response" />.
          </t>
          <t>
Once received and decoded, the ACME server checks the contents of each Response Bundle in accordance with <xref target="sec-response-check" />.
After all Challenge Bundles have either been responded to or timed-out, the validation procedure is successful only if all responses are successful.
          </t>
        </list>
An ACME server MAY send multiple challenges from different origins in the DTN network to avoid possible man-in-the-middle (MitM) attacks, as recommended in Section 10.2 of <xref target="RFC8555" />.
If responses are received from multiple challenges, any response failure SHALL cause a failure of the overall validation.
Each response failure MAY be indicated to the ACME client as a validation subproblem.
      </t>
      <t>
When responding to a Challenge Bundle, a BP agent SHALL send a single Response Bundle in accordance with <xref target="sec-bundle-response" />.
A BP agent SHALL respond to ACME challenges only within the interval of time, only for the Node ID, and only for the validation token indicated by the ACME client.
A BP agent SHALL respond to multiple challenges with the same parameters.
These correspond with the ACME server validating via multiple routing paths.
      </t>
      <section anchor="sec-nodeid-challenge-request" title="DTN Node ID Challenge Request Object">
        <t>
The DTN Node ID Challenge request object is defined by the ACME server when it supports validating Node IDs.
        </t>
        <t>
The DTN Node ID Challenge request object has the following content:
          <list style="hanging">
            <t hangText="type (required, string):">
The string "dtn-nodeid-01".
            </t>
            <t hangText="token-part2 (required, string):">
A random value that uniquely identifies the challenge.
This value MUST have at least 64 bits of entropy.
It MUST NOT contain any characters outside the base64url alphabet as described in Section 5 of <xref target="RFC4648" />.
Trailing '=' padding characters MUST be stripped.
See <xref target="RFC4086" /> for additional information on randomness requirements.
            </t>
          </list>
        </t>
      <figure>
        <artwork type="json">
{
  "type": "dtn-nodeid-01",
  "url": "https://example.com/acme/chall/prV_B7yEyA4",
  "status": "pending",
  "token-part2": "qXjSp7npR2Y"
}
</artwork>
      </figure>
        <t>
The only over-the-wire data required by ACME for a Challenge Bundle is a nonce token, but the response data needs a client account key to generate the Key Authorization.
The client account key is kept within the ACME client, the BP agent needs only the derived Key Authorization for its Response Bundle.
        </t>
      </section>
      <section anchor="sec-nodeid-challenge-response" title="DTN Node ID Challenge Response Object">
        <t>
The DTN Node ID Challenge response object is defined by the ACME client when it authorizes validation of a Node ID.
Because a DTN has the potential for significantly longer delays than a non-DTN network, the ACME client is able to inform the ACME server if a particular validation round-trip is expected to take longer than normal network delays (on the order of seconds).
        </t>
        <t>
The DTN Node ID Challenge response object has the following content:
          <list style="hanging">
            <t hangText="rtt (optional, number):">
An expected round-trip time (RTT), in seconds, between sending a Challenge Bundle and receiving a Response Bundle.
This value is a hint to the ACME server for how long to wait for responses but is not authoritative.
The minimum RTT value SHALL be zero.
There is no special significance to zero-value RTT, it simply indicates the response is expected in less than the least significant unit used by the ACME client.
            </t>
          </list>
        </t>
        <figure>
          <artwork type="json">
{
  "rtt": 300.0
}
</artwork>
        </figure>
        <t>
A challenge response is not sent until the BP agent has been configured to properly respond to the challenge, so the RTT value is meant to indicate any node-specific path delays expected to encountered from the ACME server.
Because there is no requirement on the path (or paths) which bundles may traverse between the ACME server and the BP agent, and the ACME server is likely to attempt some path diversity, the RTT value SHOULD be pessimistic.
        </t>
      </section>
      <section anchor="sec-bundle-challenge" title="ACME Node ID Validation Challenge Bundles">
        <t>
Each ACME Node ID Validation Challenge Bundle has parameters as listed here:
          <list style="hanging">
            <t hangText="Bundle Processing Control Flags:">
The payload SHALL be indicated as an administrative record.
            </t>
            <t hangText="Destination EID:">
The Destination EID SHALL be identical to the Node ID being validated.
The ACME server SHOULD NOT perform URI normalization on the Node ID given by the ACME client.
            </t>
            <t hangText="Source Node EID:">
The Source Node EID SHALL indicate the Endpoint ID of the ACME server performing the challenge.
            </t>
            <t hangText="Creation Timestamp and Lifetime:">
The Creation Timestamp SHALL be set to the time at which the challenge was generated.
The Lifetime SHALL indicate the response interval for which ACME server will accept responses to this challenge.
            </t>
            <t hangText="Administrative Record Type Code:">
Set to the ACME Node ID Validation type code defined by this specification.
            </t>
            <t hangText="Administrative Record Content:">
The ACME challenge administrative record content SHALL consist of a CBOR array with two elements.
The first element SHALL be a challenge indicator value 1, represented as a CBOR unsigned integer.
The second element SHALL be the ACME challenge token-part1, represented as a CBOR text string.
The token-part1 is a random value that uniquely identifies the challenge.
This value MUST have at least 64 bits of entropy.
See <xref target="RFC4086" /> for additional information on randomness requirements.
            </t>
          </list>
        </t>
        <figure>
          <preamble>
An ACME challenge administrative record would have CBOR diagnostic notation as:
        </preamble>
        <artwork type="cbor">
[
  1, / challenge indicator /
  "LVMo24VdNAw" / token-part1 /
]
</artwork>
        </figure>
        <t>
Challenge Bundles SHOULD be BIB-signed in accordance with <xref target="I-D.ietf-dtn-bpsec" /> if the ACME server is capable of signing bundles.
BP agents MAY refuse to respond to a Challenge Bundle which is signed by a known ACME server but has an invalid signature.
Challenge Bundles SHOULD NOT be directly encrypted (by BCB or any other method).
        </t>
      </section>
      <section anchor="sec-bundle-response" title="ACME Node ID Validation Response Bundles">
        <t>
Each ACME Node ID Validation Response Bundle has parameters as listed here:
          <list style="hanging">
            <t hangText="Bundle Processing Control Flags:">
The payload SHALL be indicated as an administrative record.
            </t>
            <t hangText="Destination EID:">
The Destination EID SHALL be identical to the Source Node EID of the Challenge Bundle to which this response corresponds.
            </t>
            <t hangText="Source Node EID:">
The Source Node EID SHALL be identical to the the Destination EID of the Challenge Bundle to which this response corresponds.
            </t>
            <t hangText="Creation Timestamp and Lifetime:">
The Creation Timestamp SHALL be set to the time at which the response was generated.
The response Lifetime SHALL indicate the response interval remaining if the Challenge Bundle indicated a limited Lifetime.
            </t>
            <t hangText="Administrative Record Type Code:">
Set to the ACME Node ID Validation type code defined by this specification.
            </t>
            <t hangText="Administrative Record Content:">
The ACME response administrative record content SHALL consist of a CBOR array with two elements.
The first element SHALL be a response indicator value 2, represented as a CBOR unsigned integer.
The second element SHALL be the ACME Key Authorization in accordance with Section 8.1 of <xref target="RFC8555" />, represented as a CBOR text string.
            </t>
          </list>
        </t>
        <figure>
          <preamble>
An ACME response administrative record would have CBOR diagnostic notation (truncated for terseness) as:
        </preamble>
        <artwork type="cbor">
[
  2, / response indicator /
  "qXjSp7npR2YtUyjbhV00DA.9jg46WB3...fm21mqTI" / key authorization /
]
</artwork>
        </figure>
        <t>
Response Bundles MAY be BIB-signed in accordance with <xref target="I-D.ietf-dtn-bpsec" /> if the BP agent is capable of signing bundles.
A BIB on the bundle gives no more security than the Key Authorization itself.
Response Bundles SHOULD NOT be directly encrypted (by BCB or any other method).
        </t>
      </section>
      <section anchor="sec-response-check" title="Response Bundle Checks">
        <t>
A proper Response Bundle meets all of the following criteria:
          <list style="sybmols">
            <t>
The Response Bundle was received within the time interval allowed for the challenge.
            </t>
            <t>
The Response Bundle Source Node ID is identical to the Node ID being validated.
The comparison of Node IDs SHALL use the comparison logic of <xref target="RFC3986" /> and scheme-based normalization of those schemes specified in <xref target="I-D.ietf-dtn-bpbis" />.
            </t>
            <t>
The response payload contains the expected Key Authorization computed by the ACME server.
            </t>
          </list>
Any of the failures above SHALL cause the validation to fail.
Any of the failures above SHOULD be indicated as subproblems to the ACME client.
        </t>
      </section>
    </section>
    <section title="Implementation Status">
      <t>
[NOTE to the RFC Editor: please remove this section before publication, as well as the reference to <xref target="RFC7942" /> and <xref target="github-acme-dtnnodeid" />.]
      </t>
      <t>
This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in <xref target="RFC7942" />.
The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.
Please note that the listing of any individual implementation here does not imply endorsement by the IETF.
Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.
This is not intended as, and must not be construed to be, a catalog of available implementations or their features.
Readers are advised to note that other implementations can exist.
      </t>
      <t>
An example implementation of the this draft of ACME has been created as a GitHub project <xref target="github-acme-dtnnodeid" /> and is intended to use as a proof-of-concept and as a possible source of interoperability testing.
This example implementation only constructs encoded bundles and does not attempt to provide a full BP Agent interface.
      </t>
    </section>
    <section anchor="sec-security" title="Security Considerations">
      <t>
This section separates security considerations into threat categories based on guidance of BCP 72 <xref target="RFC3552" />.
      </t>
      <section title="Threat: Passive Leak of Bundle Data">
        <t>
Because this challenge mechanism is used to bootstrap security between DTN Nodes, the challenge and its response are likely to be transferred in plaintext.
The ACME data itself is a random token (nonce) and a cryptographic signature, so there is no sensitive data to be leaked within the Node ID Validation bundle exchange.
        </t>
        <t>
Under certain circumstances, when BPSEC key material is available to the BP agent managed by the ACME client, the use of a BCB for the Request Bundle and/or Response Bundle can give additional confidentiality to the bundle metadata.
This is not expected to be a general use case, as the whole point of ACME is to validate identifiers of untrusted client services.
        </t>
      </section>
      <section title="Threat: BP Node Impersonation">
        <t>
As described in Section 8.1 of <xref target="RFC8555" />, it is possible for an active attacker to alter data on both ACME client channel and the DTN validation channel.
        </t>
        <t>
One way to mitigate single-path MitM attacks is to attempt validation of the same Node ID via multiple bundle routing paths, as recommended in <xref target="sec-validate-nodeid" />.
It is not a trivial task to guarantee bundle routing though, so more advanced techniques such as onion routing (using bundle-in-bundle encapsulation <xref target="I-D.ietf-dtn-bibect" />) could be employed.
        </t>
        <t>
Under certain circumstances, when BPSEC key material is available to the BP agent managed by the ACME client, the use of a BIB signature on the Response Bundle can give additional assurance that the response is coming from a valid BP agent.
        </t>
      </section>
      <section title="Threat: Denial of Service">
        <t>
The behaviors described in this section all amount to a potential denial-of-service to a BP agent.
        </t>
        <t>
A malicious entity can continually send ACME Node ID challenges to a BP agent.
The victim BP agent can ignore ACME challenges which do not conform to the specific time interval and challenge token for which the ACME client has informed the BP agent that challenges are expected.
The victim BP agent can require all Challenge Bundles to be BIB-signed to ensure authenticity of the challenge.
        </t>
        <t>
Similar to other validation methods, an ACME server validating a DTN Node ID could be used as a denial of service amplifier.
For this reason any ACME server can rate-limit validation activities for individual clients and individual certificate requests.
        </t>
      </section>
      <section title="Multiple Certificate Claims">
        <t>
A single certificate request can contain a mixed set of SAN claims, including combinations of "dns" and "uri" claims.
There is no restriction on how a certificate combines these claims, but each claim needs to be validated to issue such a certificate.
This is no different than the existing behavior of <xref target="RFC8555" /> but is mentioned here to make sure that CA policy handles such situations.
The specific use case of <xref target="I-D.ietf-dtn-tcpclv4" /> allows, and for some network policies requires, that a certificate authenticate both the DNS name of an entity as well as the Node ID of the entity.
        </t>
      </section>
    </section>
    <section anchor="sec-iana" title="IANA Considerations">
      <t>
This specification adds to the ACME registry and BP registry for this behavior.
      </t>
      <section anchor="sec-iana-acme-identifier" title="ACME Identifier Type">
        <t>
Within the "Automated Certificate Management Environment (ACME) Protocol" registry <xref target="IANA-ACME" />, the following entry has been added to the "ACME Identifier Types" sub-registry.
        </t>
        <texttable>
          <ttcol>Label</ttcol>
          <ttcol>Reference</ttcol>
          <c>uri</c>
          <c>This specification</c>
        </texttable>
      </section>
      <section anchor="sec-iana-acme-method" title="ACME Validation Method">
        <t>
Within the "Automated Certificate Management Environment (ACME) Protocol" registry <xref target="IANA-ACME" />, the following entry has been added to the "ACME Validation Methods" sub-registry.
        </t>
        <texttable>
          <ttcol>Label</ttcol>
          <ttcol>Identifier Type</ttcol>
          <ttcol>ACME</ttcol>
          <ttcol>Reference</ttcol>
          <c>dtn-nodeid-01</c>
          <c>uri</c>
          <c>Y</c>
          <c>This specification</c>
        </texttable>
      </section>
      <section anchor="sec-iana-bp-admin-type" title="BP Bundle Administrative Record Types">
        <t>
Within the "Bundle Protocol" registry <xref target="IANA-BP" />, the following entry has been added to the "Bundle Administrative Record Types" sub-registry.
[NOTE to the RFC Editor: For RFC5050 compatibility this value needs to be no larger than 15, but such compatibility is not needed. BPbis has no upper limit on this code point value.]
        </t>
        <texttable>
          <ttcol>Value</ttcol>
          <ttcol>Description</ttcol>
          <ttcol>Reference</ttcol>
          <c>TBD</c>
          <c>ACME Node ID Validation</c>
          <c>This specification</c>
        </texttable>
      </section>
    </section>
    <section anchor="sec-doc-ack" title="Acknowledgments">
      <t>
This specification is based on DTN use cases related to PKIX certificate generation.
      </t>
    </section>
  </middle>
  <back>
    <references title="Normative References">
      <reference anchor="IANA-ACME" target="https://www.iana.org/assignments/acme/">
        <front>
          <title>Automated Certificate Management Environment (ACME) Protocol</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date />
        </front>
      </reference>
      <reference anchor="IANA-BP" target="https://www.iana.org/assignments/bundle/">
        <front>
          <title>Bundle Protocol</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date />
        </front>
      </reference>
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.2985.xml"?>
      <?rfc include="reference.RFC.3552.xml"?>
      <?rfc include="reference.RFC.3986.xml"?>
      <?rfc include="reference.RFC.4086.xml"?>
      <?rfc include="reference.RFC.4648.xml"?>
      <?rfc include="reference.RFC.4838.xml"?>
      <?rfc include="reference.RFC.5280.xml"?>
      <?rfc include="reference.RFC.7942.xml"?>
      <?rfc include="reference.RFC.8174.xml"?>
      <?rfc include="reference.RFC.8555.xml"?>
      <?rfc include="reference.I-D.ietf-dtn-bpbis.xml"?>
      <?rfc include="reference.I-D.ietf-dtn-bpsec.xml"?>
    </references>
    <references title="Informative References">
      <?rfc include="reference.I-D.ietf-acme-email-smime.xml"?>
      <?rfc include="reference.I-D.ietf-dtn-bibect.xml"?>
      <?rfc include="reference.I-D.ietf-dtn-tcpclv4.xml"?>
      <reference anchor="github-acme-dtnnodeid" target="https://github.com/BSipos-RKF/acme-dtnnodeid/">
        <front>
          <title>ACME Node ID Example Implementation</title>
          <author initials="B." surname="Sipos" fullname="Brian Sipos">
            <organization abbrev="RKF Engineering">RKF Engineering Solutions, LLC</organization>
          </author>
          <date />
        </front>
      </reference>
    </references>
    <section title="Administrative Record Types CDDL">
      <t>
[NOTE to the RFC Editor: The "TBD" in this CDDL is replaced by the "ACME Node ID Validation" administrative record type code.]
      </t>
      <figure>
        <preamble>
The CDDL extension of BP <xref target="I-D.ietf-dtn-bpbis" /> for the ACME bundles is:
        </preamble>
        <artwork type="cddl">
; All ACME records have the same structure
$admin-record /= [TBD, acme-record]
acme-record = $acme-record .within acme-record-structure
acme-record-structure = [
  type-code: uint,
  acme-content: tstr
]
; The type code distinguishes the purpose
$acme-record /= [
  1,
  challenge-token: tstr
]
$acme-record /= [
  2,
  key-authorization: tstr
]
</artwork>
      </figure>
    </section>
    <section title="Example Bundles">
      <t>
      </t>
    </section>
  </back>
</rfc>